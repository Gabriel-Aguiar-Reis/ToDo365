{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcc5 A To-do List in a Calendar","text":"<p>This project is my first try to create an organized application, with documentation and good pratices. I've applied in this API concepts about clean code, RESTful API, PEP8 and PEP257.</p>"},{"location":"#hosting","title":"Hosting","text":"<p>I've hosted this project in render.com, because it's free and no need credit card. It's can be access in: https://todo365.onrender.com/api/</p>"},{"location":"#drf-swagger","title":"DRF Swagger","text":"<p>Using drf-yasg I've created a swagger explaining any types of possible requests.</p>"},{"location":"#diagrams","title":"Diagrams","text":"<p>Here are all the project diagrams, I tried to explain their functionalities and relationships.</p>"},{"location":"#models-and-serializers-class-diagrams","title":"Models and Serializers Class Diagrams","text":"<pre><code>classDiagram\n\n    User &lt;|-- UserSerializer : inheritance\n    User o-- \"0..*\" Task : create\n    Task &lt;|-- TaskSerializer : inheritance\n\n    note for User \"This class have a inheritance in AbstractUser from django.contrib.auth.models\"\n\n    class User{\n        # user_email: EmailField\n        # validated: BooleanField default=False\n        # tasks: dict ~task objects~\n        + __str__() str\n    }\n    class Task{\n        # title: CharField\n        # description: CharField\n        # datetime: DatetimeField\n        # ForeignKey(User) IntegerField\n        + __str__() string\n    }\n    class TaskSerializer{\n        - Meta\n        + validate_datetime(value) ValidationError\n    }\n    class UserSerializer{\n        + create(validated_data) User\n    }\n</code></pre>"},{"location":"#custom-permission-class-diagram","title":"Custom Permission Class Diagram","text":"<pre><code>classDiagram\n\n    direction RL\n\n    note for IsAdmin \"inheritance in BasePermission\"\n\n    class IsAdmin{\n        # has_permission() bool\n    }\n</code></pre>"},{"location":"#views-class-diagrams","title":"Views Class Diagrams","text":"<pre><code>classDiagram\n\n    note for HealthCheckView \"inheritance in generics.ListAPIView\"\n\n    class HealthCheckView{\n        - get() dict ~status~\n    }\n</code></pre> <pre><code>classDiagram\n\n    note for TaskDetail \"inheritance in generics.RetrieveUpdateDestroyAPIView\"\n\n    class TaskDetail{\n        - serializer_class: TaskSerialiazer\n        - permission_classes: list ~permissions~\n        - get_queryset() Task object\n    }\n</code></pre> <pre><code>classDiagram\n\n    note for TaskList \"inheritance in generics.ListCreateAPIView\"\n\n    class TaskList{\n        - serializer_class: TaskSerialiazer\n        - permission_classes: list ~permissions~\n        - get_queryset() Task objects\n        - perform_create() Task serializer save\n    }\n</code></pre> <pre><code>classDiagram\n\n    BaseUserCreate &lt;|-- UserCreate : inheritance\n    BaseUserCreate &lt;|-- UserAdminCreate : inheritance\n\n    note for BaseUserCreate \"inheritance in generics.CreateAPIView\"\n\n    class BaseUserCreate{\n        # serializer_class: UserSerialiazer\n        # queryset: User objects\n        # perform_create() User serializer save\n    }\n    class UserCreate{\n        - perform_create() User serializer save\n    }\n    class UserAdminCreate{\n        -perform_create() User serializer save\n    }\n</code></pre> <pre><code>classDiagram\n\n    note for UserList \"inheritance in generics.ListAPIView\"\n\n    class UserList{\n        - serializer_class: UserSerialiazer\n        - permission_classes: list ~permissions~\n        - get_queryset() User objects\n    }\n</code></pre> <pre><code>classDiagram\n\n    note for UserDetailAdmin \"inheritance in generics.RetrieveUpdateDestroyAPIView\"\n\n    class UserDetailAdmin{\n        - serializer_class: UserSerialiazer\n        - permission_classes: list ~permissions~\n        - queryset: User objects\n    }\n</code></pre> <pre><code>classDiagram\n\n    note for UserDetail \"inheritance in generics.RetrieveUpdateAPIView\"\n\n    class UserDetail{\n        - serializer_class: UserSerialiazer\n        - queryset: User objects\n        - get_object() self User\n    }\n</code></pre> <pre><code>classDiagram\n\n    note for VerifyEmailToken \"inheritance in rest_framework.views.APIView\"\n\n    class VerifyEmailToken{\n        - serializer_class: UserSerialiazer\n        - get serializer.data\n    }\n</code></pre>"}]}